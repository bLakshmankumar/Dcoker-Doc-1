#                                                                           Docker-Doc-5
#                                                                          --------------
# Docker Image related commands -:
---------------------------------

# How can we move docker image from Build server to Deployment server -:
------------------------------------------------------------------------
#  > We have two ways to move a docker image from one server to another server -:
---------------------------------------------------------------------------------
# > First way With Registory/Repository -:
------------------------------------------
# We can move image from one server to another server using(via) Registory(ECR,Nexus,Jfrog).
# First we pushing the image to registory(PVT) and we pulling the image to target serever(Deployment - Server).

# > Second way without Registory/Repository -:(How can we do this) -:
---------------------------------------------------------------------
# There are some ways by using this below commands we can move the docker image from one serever to another server

# Commands are -:
-----------------
# docker save imagename -o(out put) imagename.tar (we can save this image as a tar file)
# we have a tar file so we can copy this tar file to target server using scp command.
# Once we copied that tar file in target server > on target serever execute (docker load) command.(docker load -i tarfilename).
--------------------------------------------------------------------------------------------------------------------------------



#                                                                      Container Related Commands
#                                                                      ---------------------------

#  We have an image/package that we want to deploy/run so that our application process will be started but how can we do this -:
--------------------------------------------------------------------------------------------------------------------------------
#  For that we are using Different commands tto create a containers those are -:
--------------------------------------------------------------------------------
# > docker create --name <container name> <image name>:<version>         
# > docker run  --name <container name> <image name>:<version>            
# > docker run -d  --name <container name> <image name>:<version>        

# > When we creating a container, if the image is not available in our server it'll pull down from the from registory and it'll create a container.


# > What is the difference between docker create and docker run -:
------------------------------------------------------------------
# > {docker create it just create a container but it'll not start, we need to start the container after creating the container using (docker start command)} 
# > {docker run it'll  create the container and start the conatiner}.


# How can we access a container from outside -:
-----------------------------------------------
# > For example my container is starts and in this conatiner tomcat is running with port number 8080, i wanna access this container from outside how ?
# > Each and every container has an unique IP address so can we access using conatiner IP, and server also we have an IP address(both pub & pvt Ip).
# > by default we can't acess the container using container IP's from outside Docker.  for that we need to map/portbinding/portforwarding,(-p) then we can acccess using ip:hostport.


# How the request is go to container -:
---------------------------------------
# > when rewuest is sent first the request is go to docker-proxy > then it goes to container.


# How to check the network process details -:
---------------------------------------------
# > Use this command > sudo netstat -tulnp


# How many containers we can create in one server -:
----------------------------------------------------
# > It's toatlly depends on server resources/capacity (cpu,memory&etc).


# Where Docker is maintaing all these container information -:
--------------------------------------------------------------
#  > /var/lib/docker/conatiner > our container and image, nerwork and ect info will maintaing under docker working directory.


# How to see what process is running inside my container -:
-----------------------------------------------------------
# > docker top <containerId/name>  -: what process is running we can see.


# How to check the resource usage -:
------------------------------------
# > docker stats <containerId/name>


# How to check docker container logs/Troubleshoot commands -:
-------------------------------------------------------------
# > docker logs <containerId/containername>
# > docker logs <containerId/containername>
# > docker logs <containerId/containername> -f -: (-f) Floating logs i'll print whenever the application is acccess


# If You wanna send logs to different file -:
---------------------------------------------
# > > docker logs <containername>   >> target file name(targetlogfile.txt).


# How to execute a commands in conatianer -:
--------------------------------------------
# > docker exec <containername> ls/ps/pwd&etc(command) (this command executed on this container). 

# > How to login to container -:
--------------------------------
# > docker exec -it <conatianername> /bin/bash (or) bash
# > Each and every conatainer has it's own file system.(bin,boot,etc,home,lib,lib64 & etc).

# How to commit a container changes as an imgage -:
---------------------------------------------------
# > docker commit <containername> <anyimagename>  -: we can retain our changes whatever is happening in a container as an image 
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

# Can we run/have multiple process inside a Single Container -:
---------------------------------------------------------------
# > Multiple processess means we can have like java proces and like DB process like multiple softwares.
# > Technically It's Possible and we can run multiple processes inside a conatainer but it's not suggestable and not recommandable to run multiple processess in a sigle container.


#How to attach container process to our host shell(our server shell) -:
-----------------------------------------------------------------------
# docker attach <containerId/containername>  -: It'll attach container process to our host shell(our server shell). > we can access whatever happending in the background.


# what is the command for check the running container info -:
-------------------------------------------------------------
# > docker ps                                                > it'll list all runninng container info 
# > docker ps -a                                             > it'll list all runninng and stoped container info.
# > docker inspect <containerId/containername>               > we can see complete overview of the container(network info , image info, status, & etc).
# > docker volume ls                                         > we can list the existing volumes
# > docker volume create                                     > Create a volume
# > docker network ls                                        > we can list the available network list.
# > docker stats                                             > we can see the resource usage info.
# > docker top <containerId/name>                            > what process is running we can see.
 

#                                                                   Docker Image
#                                                                   ------------
# What is Docker image-:
-----------------------
# > A Docker image is made up of a collection of files that bundle together all the essentials – such as installations, application code, and dependencies – required to configure a fully operational container environment.

# > we can create a Docker image by using one of two methods:
------------------------------------------------------------
# > Interactive: By running a container from an existing Docker image, manually changing that container environment through a series of live steps, and saving the resulting state as a new image.
# > Dockerfile: By constructing a plain-text file, known as a Dockerfile, which provides the specifications for creating a Docker image.
